//const originalModule = jest.requireActual('../Field');

export const fieldGenerator = (size: number) => {
    switch (size) {
        case 9:
        default:
            return [
                [0,0,0,0,0,0,1,9,1],
                [0,0,0,0,0,0,2,2,2],
                [0,0,0,0,0,0,1,9,1],
                [0,0,0,0,0,0,1,1,1],
                [1,1,2,1,1,1,1,1,0],
                [1,9,2,9,1,1,9,1,0],
                [1,1,2,1,1,1,1,1,0],
                [0,0,0,0,0,0,0,0,0],
                [0,0,0,0,0,0,0,0,0],
            ]
        case 16:
            return [
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0],
            ];
        case 22:
            return [
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [1,1,1,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [1,9,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [1,2,9,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                [0,1,1,1,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            ]
    }
}

export const CellState = {
    empty: 0,
    bomb: 9,
    hidden: 10,
    flag: 11,
    weakFlag: 12,
};

export const generateFieldWithDefaultState = (
    size: number, 
    state = CellState.empty
) => new Array(size).fill(null).map(() => new Array(size).fill(state));